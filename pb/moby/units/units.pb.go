// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pb/moby/units/units.proto

/*
Package units is a generated protocol buffer package.

It is generated from these files:
	pb/moby/units/units.proto

It has these top-level messages:
	Ulimit
	Rlimit
*/
package units

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// Ulimit is a human friendly version of Rlimit.
// type Ulimit struct
type Ulimit struct {
	// Name sstring
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Hard int64
	Hard int64 `protobuf:"varint,2,opt,name=hard,proto3" json:"hard,omitempty"`
	// Soft int64
	Soft int64 `protobuf:"varint,3,opt,name=soft,proto3" json:"soft,omitempty"`
}

func (m *Ulimit) Reset()                    { *m = Ulimit{} }
func (m *Ulimit) String() string            { return proto.CompactTextString(m) }
func (*Ulimit) ProtoMessage()               {}
func (*Ulimit) Descriptor() ([]byte, []int) { return fileDescriptorUnits, []int{0} }

func (m *Ulimit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Ulimit) GetHard() int64 {
	if m != nil {
		return m.Hard
	}
	return 0
}

func (m *Ulimit) GetSoft() int64 {
	if m != nil {
		return m.Soft
	}
	return 0
}

// Rlimit specifies the resources limits, such as max open files.
// type Rlimit struct
type Rlimit struct {
	// Type int `json:"type,omitempty"`
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// Hard uint64 `json:"hard,omitempty"`
	Hard uint64 `protobuf:"varint,2,opt,name=hard,proto3" json:"hard,omitempty"`
	// Soft uint64 `json:"soft,omitempty"`
	Soft uint64 `protobuf:"varint,3,opt,name=soft,proto3" json:"soft,omitempty"`
}

func (m *Rlimit) Reset()                    { *m = Rlimit{} }
func (m *Rlimit) String() string            { return proto.CompactTextString(m) }
func (*Rlimit) ProtoMessage()               {}
func (*Rlimit) Descriptor() ([]byte, []int) { return fileDescriptorUnits, []int{1} }

func (m *Rlimit) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Rlimit) GetHard() uint64 {
	if m != nil {
		return m.Hard
	}
	return 0
}

func (m *Rlimit) GetSoft() uint64 {
	if m != nil {
		return m.Soft
	}
	return 0
}

func init() {
	proto.RegisterType((*Ulimit)(nil), "units.Ulimit")
	proto.RegisterType((*Rlimit)(nil), "units.Rlimit")
}

func init() { proto.RegisterFile("pb/moby/units/units.proto", fileDescriptorUnits) }

var fileDescriptorUnits = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x48, 0xd2, 0xcf,
	0xcd, 0x4f, 0xaa, 0xd4, 0x2f, 0xcd, 0xcb, 0x2c, 0x29, 0x86, 0x90, 0x7a, 0x05, 0x45, 0xf9, 0x25,
	0xf9, 0x42, 0xac, 0x60, 0x8e, 0x92, 0x0b, 0x17, 0x5b, 0x68, 0x4e, 0x66, 0x6e, 0x66, 0x89, 0x90,
	0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x0d,
	0x12, 0xcb, 0x48, 0x2c, 0x4a, 0x91, 0x60, 0x52, 0x60, 0xd4, 0x60, 0x0e, 0x02, 0xb3, 0x41, 0x62,
	0xc5, 0xf9, 0x69, 0x25, 0x12, 0xcc, 0x10, 0x31, 0x10, 0x1b, 0x64, 0x4a, 0x10, 0xdc, 0x94, 0x92,
	0xca, 0x02, 0x88, 0x29, 0xac, 0x41, 0x60, 0x36, 0x8a, 0x29, 0x2c, 0x58, 0x4c, 0x61, 0x81, 0x98,
	0x92, 0xc4, 0x06, 0x76, 0x99, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x11, 0x6c, 0xd6, 0xab, 0xb6,
	0x00, 0x00, 0x00,
}
