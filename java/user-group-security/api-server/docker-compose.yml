version: '2'

services:
  #mysql:
  #  environment:
  #  - MYSQL_ROOT_PASSWORD=password
  #  - MYSQL_USER=testuser
  #  - MYSQL_PASSWORD=testpassword
  #  - MYSQL_DATABASE=testdb
  #  image: mysql:5.7
  #  restart: unless-stopped
  #  volumes:
  #  - /srv/mysql/data:/var/lib/mysql

  mariadb:
    environment:
    - MYSQL_ROOT_PASSWORD=password
    # - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    - MYSQL_DATABASE=example
    - MYSQL_USER=dbuser
    - MYSQL_PASSWORD=dbpass
    image: mariadb:10.3
    ports:
    - "3306:3306"
    restart: always
    volumes:
    # - /srv/mysql/data:/var/lib/mysql
    - db-data:/var/lib/mysql
    - ./db/mariadb-schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro

  # redis:
  #   command:
  #   - --loglevel warning
  #   image: sameersbn/redis:latest
  #   restart: always
  #   volumes:
  #   - redis-data:/var/lib/redis

  redis:
    image: redis:3.2
    ports:
    - "6379:6379"
    restart: always
    volumes:
    - redis-data:/data
    # - /myredis/conf/redis.conf:/usr/local/etc/redis/redis.conf

  api:
    environment:
    - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/example
    - SPRING_DATASOURCE_USERNAME=dbuser
    - SPRING_DATASOURCE_PASSWORD=dbpass
    - SPRING_REDIS_HOST=redis
    - SPRING_REDIS_PORT=6379
    - SPRING_REDIS_DATABASE=0
    - SPRING_CACHE_TYPE=none  # comment it if redis is available
    - SERVER_PORT=8080
    - VOLUME_MOUNT=/tmp/mnt-home
    - MINUS_SECONDS=10
    image: docker.io/tangfeixiong/ugs:0.1
    ports:
    - "8080:8080"
    restart: always
    volumes:
    - /tmp/mnt-home:/tmp/mnt-home

volumes:
    db-data:
      # external: true # Force docker compose to look for an existing volume
    redis-data:
